name: Workflow to deploy ADF ARM Template to UAT environment from DEV environment
on: 
  push:
    branches: 
      - main
    paths:
      - scripts/**

env:

  CLUSTER_URI: ${{ secrets.CLUSTER_URI }}
  TENANT_ID: ${{ secrets.TENANT_ID }}
  CLIENT_ID: ${{ secrets.CLIENT_ID }}
  SECRET: ${{ secrets.SECRET_VALUE }}
  

jobs:
  Generate_delta_for_devdb:
      
    runs-on: ubuntu-latest
    steps:
    # Authentication 

    - name: run the bash script to install delta kusto CLI
      run: |
      
        # Fails if one of the command fails in the script
        #set -e
        #clientVersion=$(curl https://delta-kusto.azurefd.net/clientVersion/unique?fromClientVersion=0)
        # Display the version on console
        #echo "Client Version:  $clientVersion"
        # wget https://github.com/microsoft/delta-kusto/releases/download/$clientVersion/delta-kusto-linux.tar.gz

        wget https://github.com/microsoft/delta-kusto/releases/download/0.6.0.85/delta-kusto-linux.tar.gz
        echo " tar command starts"
        tar -zxvf delta-kusto-linux.tar.gz 
        echo "cp command starts"
        sudo cp delta-kusto /bin 
        echo " bin ls starts"
        echo `ls -lrt /bin`
    
    
    # Checkout
    - name: Checkout
      uses: actions/checkout@v1 
      
    - name: prepare the script folders
      run: |

        mkdir scripts/kql-scripts
        mkdir scripts/kql-scripts/complete
    
    - name: run delta kusto 
      run: |
        clusterUri=${{ env.CLUSTER_URI }}
        echo "Cluster URI:  $clusterUri"
        # Package the login in a JSON payload
        login='{"tenantId":"${{ env.TENANT_ID }}","clientId":"${{ env.CLIENT_ID }}","secret":"${{ env.SECRET }}"}'
        ./bin/delta-kusto -p scripts/dev_state_parameters.yaml -o jobs.download-dev.target.adx.clusterUri=$clusterUri jobs.delta-dev.current.adx.clusterUri=$clusterUri jobs.delta-dev.target.adx.clusterUri=$clusterUri tokenProvider.login=$login
      
    
    # artifacts upload
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: published
        path: scripts/kql-scripts
